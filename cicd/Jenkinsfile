pipeline {
    agent any
    stages {
        stage('node pipeline') {
            agent {
                docker { image 'node:20.11.1-alpine3.19' 
                reuseNode true 
                }
           
            }
            stages {
                stage('Instalar') {
                    steps {
                       sh 'npm install'
                    }
                }
                stage('Ejecutar test') {
                    steps {
                       sh 'npm run test'
                    }
                 }
                stage('Ejecutar build') {
                    steps {
                       sh 'npm run build'
                    }

                }
      
            }
        }



     stage('Calidad del c√≥digo') {  
            stages {
                   stage('build & sonarQube analysis'){
                        agent {
                              docker {
                                image 'sonarsource/sonar-scanner-cli'
                                args  '--network="devops-infra_default"'
                                reuseNode true
                              }  

                        }
                       steps {
                            withSonarQubeEnv('sonarqube'){
                                sh 'sonar-scanner'
                            }
                       }
                   } 
                   stage('Quality Gate: Puerta de calidad'){
                        steps {
                            timeout(time: 1, unit: 'HOURS') {
                                waitForQualityGate abortPipeline: true
                            }
                        }
                   } 
            }
         }    

        stage('delivery to docker: crear imagen docker') {        
                steps {
                    script { 
                    docker.withRegistry('http://localhost:8082','nexus-key') {
                    sh 'docker build -t localhost:8082/tarea-proyecto-devops .'
                    sh "docker tag localhost:8082/tarea-proyecto-devops localhost:8082/tarea-proyecto-devops:${env.BRANCH_NAME}-${env.BUILD_NUMBER}"
                    sh 'docker push localhost:8082/tarea-proyecto-devops'
                    sh "docker push localhost:8082/tarea-proyecto-devops:${env.BRANCH_NAME}-${env.BUILD_NUMBER}"
                         }

                     }  
                }

         }     
         stage('Deploy por Compose') {       
                steps {
                    script { 
                    docker.withRegistry('http://localhost:8082','nexus-key') {
                    sh 'docker-compose pull'
                    sh 'docker-compose up --force-recreate --build -d'
                            }

                        }
                }

         }  
    }
}